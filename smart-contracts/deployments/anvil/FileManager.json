{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_accessNFT",
          "type": "address"
        }
      ],
      "name": "addAccessNFT",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_allowed",
          "type": "address"
        }
      ],
      "name": "addAllowed",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_cid",
          "type": "string"
        },
        {
          "internalType": "string[]",
          "name": "fileNames",
          "type": "string[]"
        }
      ],
      "name": "createSafe",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_fileName",
          "type": "string"
        }
      ],
      "name": "deleteFileFromSafe",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        }
      ],
      "name": "deleteSafe",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "NFT",
          "type": "address"
        }
      ],
      "name": "getSafesForNFT",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "cid",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "accessNFT",
              "type": "address"
            },
            {
              "internalType": "string[]",
              "name": "fileNames",
              "type": "string[]"
            }
          ],
          "internalType": "struct FileManager.Safe[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getSafesSharedWith",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "cid",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "accessNFT",
              "type": "address"
            },
            {
              "internalType": "string[]",
              "name": "fileNames",
              "type": "string[]"
            }
          ],
          "internalType": "struct FileManager.Safe[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getUserSafes",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "cid",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "accessNFT",
              "type": "address"
            },
            {
              "internalType": "string[]",
              "name": "fileNames",
              "type": "string[]"
            }
          ],
          "internalType": "struct FileManager.Safe[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_allowed",
          "type": "address"
        }
      ],
      "name": "removeAllowed",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "safeCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x364a07ae65618901f1a0a4ebce8d99dcd7bdcc44d506b06f7f0c02632f79cb4e",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "2320016",
    "logsBloom": "0x
    "blockHash": "0x745b3b8bec1bb6073324dd5a7095ea0eecd64eaa4c5e7316bb2841a7c813498d",
    "transactionHash": "0x364a07ae65618901f1a0a4ebce8d99dcd7bdcc44d506b06f7f0c02632f79cb4e",
    "logs": [],
    "blockNumber": 1,
    "cumulativeGasUsed": "2320016",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "1897545bfd2b01ee922431d713fb6370",
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_accessNFT\",\"type\":\"address\"}],\"name\":\"addAccessNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_allowed\",\"type\":\"address\"}],\"name\":\"addAllowed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_cid\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"fileNames\",\"type\":\"string[]\"}],\"name\":\"createSafe\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_fileName\",\"type\":\"string\"}],\"name\":\"deleteFileFromSafe\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"deleteSafe\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"NFT\",\"type\":\"address\"}],\"name\":\"getSafesForNFT\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"cid\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"accessNFT\",\"type\":\"address\"},{\"internalType\":\"string[]\",\"name\":\"fileNames\",\"type\":\"string[]\"}],\"internalType\":\"struct FileManager.Safe[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getSafesSharedWith\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"cid\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"accessNFT\",\"type\":\"address\"},{\"internalType\":\"string[]\",\"name\":\"fileNames\",\"type\":\"string[]\"}],\"internalType\":\"struct FileManager.Safe[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserSafes\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"cid\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"accessNFT\",\"type\":\"address\"},{\"internalType\":\"string[]\",\"name\":\"fileNames\",\"type\":\"string[]\"}],\"internalType\":\"struct FileManager.Safe[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_allowed\",\"type\":\"address\"}],\"name\":\"removeAllowed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"safeCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FileManager.sol\":\"FileManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"contracts/FileManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC721/IERC721.sol\\\";\\n\\ncontract FileManager {\\n    struct Safe {\\n        string name;\\n        string cid;\\n        address owner;\\n        address accessNFT;\\n        string[] fileNames;\\n    }\\n\\n    mapping(uint256 => Safe) private safes;\\n    mapping(uint256 => mapping(address => bool)) allowed;\\n    uint256 public safeCount;\\n\\n    function createSafe(\\n        string memory _name,\\n        string memory _cid,\\n        string[] memory fileNames\\n    ) public {\\n        safeCount++;\\n        safes[safeCount] = Safe(_name, _cid, msg.sender, address(0), fileNames);\\n    }\\n\\n    function addAllowed(string memory _name, address _allowed) public {\\n        for (uint256 i = 1; i <= safeCount; i++) {\\n            if (\\n                keccak256(abi.encodePacked(safes[i].name)) ==\\n                keccak256(abi.encodePacked(_name))\\n            ) {\\n                require(\\n                    msg.sender == safes[i].owner,\\n                    \\\"Only owner can add allowed\\\"\\n                );\\n                allowed[i][_allowed] = true;\\n            }\\n        }\\n    }\\n\\n    function addAccessNFT(string memory _name, address _accessNFT) public {\\n        for (uint256 i = 1; i <= safeCount; i++) {\\n            if (\\n                keccak256(abi.encodePacked(safes[i].name)) ==\\n                keccak256(abi.encodePacked(_name))\\n            ) {\\n                require(\\n                    msg.sender == safes[i].owner,\\n                    \\\"Only owner can add allowed\\\"\\n                );\\n                safes[i].accessNFT = _accessNFT;\\n            }\\n        }\\n    }\\n\\n    function removeAllowed(string memory _name, address _allowed) public {\\n        for (uint256 i = 1; i <= safeCount; i++) {\\n            if (\\n                keccak256(abi.encodePacked(safes[i].name)) ==\\n                keccak256(abi.encodePacked(_name))\\n            ) {\\n                require(\\n                    msg.sender == safes[i].owner,\\n                    \\\"Only owner can remove allowed\\\"\\n                );\\n                allowed[i][_allowed] = false;\\n            }\\n        }\\n    }\\n\\n    function getSafesSharedWith(\\n        address _user\\n    ) public view returns (Safe[] memory) {\\n        uint256 count = 0;\\n        for (uint256 i = 1; i <= safeCount; i++) {\\n            if (allowed[i][_user]) {\\n                count++;\\n            }\\n        }\\n\\n        Safe[] memory sharedSafes = new Safe[](count);\\n        count = 0;\\n        for (uint256 i = 1; i <= safeCount; i++) {\\n            if (allowed[i][_user]) {\\n                sharedSafes[count] = safes[i];\\n                count++;\\n            }\\n        }\\n\\n        return sharedSafes;\\n    }\\n\\n    function getUserSafes(address _user) public view returns (Safe[] memory) {\\n        uint256 count = 0;\\n        for (uint256 i = 1; i <= safeCount; i++) {\\n            if (safes[i].owner == _user) {\\n                count++;\\n            }\\n        }\\n\\n        Safe[] memory userSafes = new Safe[](count);\\n        count = 0;\\n        for (uint256 i = 1; i <= safeCount; i++) {\\n            if (safes[i].owner == _user) {\\n                userSafes[count] = safes[i];\\n                count++;\\n            }\\n        }\\n\\n        return userSafes;\\n    }\\n\\n    function deleteSafe(string memory _name) public {\\n        for (uint256 i = 1; i <= safeCount; i++) {\\n            if (\\n                keccak256(abi.encodePacked(safes[i].name)) ==\\n                keccak256(abi.encodePacked(_name))\\n            ) {\\n                require(\\n                    msg.sender == safes[i].owner,\\n                    \\\"Only owner can delete safe\\\"\\n                );\\n                delete safes[i];\\n                safeCount--;\\n                return;\\n            }\\n        }\\n    }\\n\\n    function deleteFileFromSafe(\\n        string memory _name,\\n        string memory _fileName\\n    ) public {\\n        for (uint256 i = 1; i <= safeCount; i++) {\\n            if (\\n                keccak256(abi.encodePacked(safes[i].name)) ==\\n                keccak256(abi.encodePacked(_name))\\n            ) {\\n                require(\\n                    msg.sender == safes[i].owner,\\n                    \\\"Only owner can delete file\\\"\\n                );\\n                for (uint256 j = 0; j < safes[i].fileNames.length; j++) {\\n                    if (\\n                        keccak256(\\n                            abi.encodePacked(safes[i].fileNames[j])\\n                        ) == keccak256(abi.encodePacked(_fileName))\\n                    ) {\\n                        delete safes[i].fileNames[j];\\n                        return;\\n                    }\\n                }\\n            }\\n        }\\n    }\\n\\n    function getSafesForNFT(address NFT) public view returns(Safe[] memory) {\\n        // require(\\n        //     IERC721(NFT).balanceOf(msg.sender) > 0,\\n        //     \\\"You must own an acceptance NFT to vote for a proposal\\\"\\n        // );\\n\\n        uint256 count = 0;\\n        for (uint256 i = 1; i <= safeCount; i++) {\\n            if (safes[i].accessNFT == NFT) {\\n                count++;\\n            }\\n        }\\n\\n        Safe[] memory allowedSafes = new Safe[](count);\\n        count = 0;\\n\\n        for (uint256 i = 1; i <= safeCount; i++) {\\n            if (safes[i].accessNFT == NFT) {\\n                allowedSafes[count]= safes[i];\\n                count++;\\n            }\\n        }\\n\\n        return allowedSafes;\\n    }\\n}\\n\",\"keccak256\":\"0x26d6cbb910443e98859dd43a7206c4014f5ca46dec3c824217c8032e6e870de7\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50612912806100206000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80637df73472116100665780637df7347214610143578063be6916941461015f578063e4bcd9021461017d578063ed1f9ca614610199578063ee598f33146101c95761009e565b806308578a63146100a35780631789ac2b146100bf578063317960c4146100db578063383efbd5146100f75780636ef6682714610127575b600080fd5b6100bd60048036038101906100b89190611cbe565b6101f9565b005b6100d960048036038101906100d49190611d1a565b610380565b005b6100f560048036038101906100f09190611cbe565b610563565b005b610111600480360381019061010c9190611d63565b6106ff565b60405161011e9190612026565b60405180910390f35b610141600480360381019061013c9190612048565b610b78565b005b61015d600480360381019061015891906121a6565b610daa565b005b610167610f09565b6040516101749190612266565b60405180910390f35b61019760048036038101906101929190611cbe565b610f0f565b005b6101b360048036038101906101ae9190611d63565b6110aa565b6040516101c09190612026565b60405180910390f35b6101e360048036038101906101de9190611d63565b61152d565b6040516101f09190612026565b60405180910390f35b6000600190505b600254811161037b578260405160200161021a91906122bd565b6040516020818303038152906040528051906020012060008083815260200190815260200160002060000160405160200161025591906123cc565b60405160208183030381529060405280519060200120036103685760008082815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610313576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030a90612440565b60405180910390fd5b8160008083815260200190815260200160002060030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b80806103739061248f565b915050610200565b505050565b6000600190505b600254811161055e57816040516020016103a191906122bd565b604051602081830303815290604052805190602001206000808381526020019081526020016000206000016040516020016103dc91906123cc565b604051602081830303815290604052805190602001200361054b5760008082815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461049a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049190612523565b60405180910390fd5b600080828152602001908152602001600020600080820160006104bd91906119b0565b6001820160006104cd91906119b0565b6002820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556003820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560048201600061052b91906119f0565b50506002600081548092919061054090612543565b919050555050610560565b80806105569061248f565b915050610387565b505b50565b6000600190505b60025481116106fa578260405160200161058491906122bd565b604051602081830303815290604052805190602001206000808381526020019081526020016000206000016040516020016105bf91906123cc565b60405160208183030381529060405280519060200120036106e75760008082815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461067d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610674906125b8565b60405180910390fd5b60006001600083815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b80806106f29061248f565b91505061056a565b505050565b6060600080600190505b6002548111610797576001600082815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156107845781806107809061248f565b9250505b808061078f9061248f565b915050610709565b5060008167ffffffffffffffff8111156107b4576107b3611b35565b5b6040519080825280602002602001820160405280156107ed57816020015b6107da611a11565b8152602001906001900390816107d25790505b509050600091506000600190505b6002548111610b6d576001600082815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610b5a576000808281526020019081526020016000206040518060a001604052908160008201805461089490612303565b80601f01602080910402602001604051908101604052809291908181526020018280546108c090612303565b801561090d5780601f106108e25761010080835404028352916020019161090d565b820191906000526020600020905b8154815290600101906020018083116108f057829003601f168201915b5050505050815260200160018201805461092690612303565b80601f016020809104026020016040519081016040528092919081815260200182805461095290612303565b801561099f5780601f106109745761010080835404028352916020019161099f565b820191906000526020600020905b81548152906001019060200180831161098257829003601f168201915b505050505081526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160048201805480602002602001604051908101604052809291908181526020016000905b82821015610b25578382906000526020600020018054610a9890612303565b80601f0160208091040260200160405190810160405280929190818152602001828054610ac490612303565b8015610b115780601f10610ae657610100808354040283529160200191610b11565b820191906000526020600020905b815481529060010190602001808311610af457829003601f168201915b505050505081526020019060010190610a79565b5050505081525050828481518110610b4057610b3f6125d8565b5b60200260200101819052508280610b569061248f565b9350505b8080610b659061248f565b9150506107fb565b508092505050919050565b6000600190505b6002548111610da45782604051602001610b9991906122bd565b60405160208183030381529060405280519060200120600080838152602001908152602001600020600001604051602001610bd491906123cc565b6040516020818303038152906040528051906020012003610d915760008082815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610c92576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c8990612653565b60405180910390fd5b60005b60008083815260200190815260200160002060040180549050811015610d8f5782604051602001610cc691906122bd565b604051602081830303815290604052805190602001206000808481526020019081526020016000206004018281548110610d0357610d026125d8565b5b90600052602060002001604051602001610d1d91906123cc565b6040516020818303038152906040528051906020012003610d7c576000808381526020019081526020016000206004018181548110610d5f57610d5e6125d8565b5b906000526020600020016000610d7591906119b0565b5050610da6565b8080610d879061248f565b915050610c95565b505b8080610d9c9061248f565b915050610b7f565b505b5050565b60026000815480929190610dbd9061248f565b91905055506040518060a001604052808481526020018381526020013373ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020018281525060008060025481526020019081526020016000206000820151816000019081610e3f919061280a565b506020820151816001019081610e55919061280a565b5060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506080820151816004019080519060200190610f00929190611a6c565b50905050505050565b60025481565b6000600190505b60025481116110a55782604051602001610f3091906122bd565b60405160208183030381529060405280519060200120600080838152602001908152602001600020600001604051602001610f6b91906123cc565b60405160208183030381529060405280519060200120036110925760008082815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611029576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161102090612440565b60405180910390fd5b600180600083815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b808061109d9061248f565b915050610f16565b505050565b6060600080600190505b6002548111611147578373ffffffffffffffffffffffffffffffffffffffff1660008083815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036111345781806111309061248f565b9250505b808061113f9061248f565b9150506110b4565b5060008167ffffffffffffffff81111561116457611163611b35565b5b60405190808252806020026020018201604052801561119d57816020015b61118a611a11565b8152602001906001900390816111825790505b509050600091506000600190505b6002548111611522578473ffffffffffffffffffffffffffffffffffffffff1660008083815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361150f576000808281526020019081526020016000206040518060a001604052908160008201805461124990612303565b80601f016020809104026020016040519081016040528092919081815260200182805461127590612303565b80156112c25780601f10611297576101008083540402835291602001916112c2565b820191906000526020600020905b8154815290600101906020018083116112a557829003601f168201915b505050505081526020016001820180546112db90612303565b80601f016020809104026020016040519081016040528092919081815260200182805461130790612303565b80156113545780601f1061132957610100808354040283529160200191611354565b820191906000526020600020905b81548152906001019060200180831161133757829003601f168201915b505050505081526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160048201805480602002602001604051908101604052809291908181526020016000905b828210156114da57838290600052602060002001805461144d90612303565b80601f016020809104026020016040519081016040528092919081815260200182805461147990612303565b80156114c65780601f1061149b576101008083540402835291602001916114c6565b820191906000526020600020905b8154815290600101906020018083116114a957829003601f168201915b50505050508152602001906001019061142e565b50505050815250508284815181106114f5576114f46125d8565b5b6020026020010181905250828061150b9061248f565b9350505b808061151a9061248f565b9150506111ab565b508092505050919050565b6060600080600190505b60025481116115ca578373ffffffffffffffffffffffffffffffffffffffff1660008083815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036115b75781806115b39061248f565b9250505b80806115c29061248f565b915050611537565b5060008167ffffffffffffffff8111156115e7576115e6611b35565b5b60405190808252806020026020018201604052801561162057816020015b61160d611a11565b8152602001906001900390816116055790505b509050600091506000600190505b60025481116119a5578473ffffffffffffffffffffffffffffffffffffffff1660008083815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603611992576000808281526020019081526020016000206040518060a00160405290816000820180546116cc90612303565b80601f01602080910402602001604051908101604052809291908181526020018280546116f890612303565b80156117455780601f1061171a57610100808354040283529160200191611745565b820191906000526020600020905b81548152906001019060200180831161172857829003601f168201915b5050505050815260200160018201805461175e90612303565b80601f016020809104026020016040519081016040528092919081815260200182805461178a90612303565b80156117d75780601f106117ac576101008083540402835291602001916117d7565b820191906000526020600020905b8154815290600101906020018083116117ba57829003601f168201915b505050505081526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160048201805480602002602001604051908101604052809291908181526020016000905b8282101561195d5783829060005260206000200180546118d090612303565b80601f01602080910402602001604051908101604052809291908181526020018280546118fc90612303565b80156119495780601f1061191e57610100808354040283529160200191611949565b820191906000526020600020905b81548152906001019060200180831161192c57829003601f168201915b5050505050815260200190600101906118b1565b5050505081525050828481518110611978576119776125d8565b5b6020026020010181905250828061198e9061248f565b9350505b808061199d9061248f565b91505061162e565b508092505050919050565b5080546119bc90612303565b6000825580601f106119ce57506119ed565b601f0160209004906000526020600020908101906119ec9190611ac5565b5b50565b5080546000825590600052602060002090810190611a0e9190611ae2565b50565b6040518060a001604052806060815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001606081525090565b828054828255906000526020600020908101928215611ab4579160200282015b82811115611ab3578251829081611aa3919061280a565b5091602001919060010190611a8c565b5b509050611ac19190611ae2565b5090565b5b80821115611ade576000816000905550600101611ac6565b5090565b5b80821115611b025760008181611af991906119b0565b50600101611ae3565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611b6d82611b24565b810181811067ffffffffffffffff82111715611b8c57611b8b611b35565b5b80604052505050565b6000611b9f611b06565b9050611bab8282611b64565b919050565b600067ffffffffffffffff821115611bcb57611bca611b35565b5b611bd482611b24565b9050602081019050919050565b82818337600083830152505050565b6000611c03611bfe84611bb0565b611b95565b905082815260208101848484011115611c1f57611c1e611b1f565b5b611c2a848285611be1565b509392505050565b600082601f830112611c4757611c46611b1a565b5b8135611c57848260208601611bf0565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611c8b82611c60565b9050919050565b611c9b81611c80565b8114611ca657600080fd5b50565b600081359050611cb881611c92565b92915050565b60008060408385031215611cd557611cd4611b10565b5b600083013567ffffffffffffffff811115611cf357611cf2611b15565b5b611cff85828601611c32565b9250506020611d1085828601611ca9565b9150509250929050565b600060208284031215611d3057611d2f611b10565b5b600082013567ffffffffffffffff811115611d4e57611d4d611b15565b5b611d5a84828501611c32565b91505092915050565b600060208284031215611d7957611d78611b10565b5b6000611d8784828501611ca9565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611df6578082015181840152602081019050611ddb565b60008484015250505050565b6000611e0d82611dbc565b611e178185611dc7565b9350611e27818560208601611dd8565b611e3081611b24565b840191505092915050565b611e4481611c80565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000611e828383611e02565b905092915050565b6000602082019050919050565b6000611ea282611e4a565b611eac8185611e55565b935083602082028501611ebe85611e66565b8060005b85811015611efa5784840389528151611edb8582611e76565b9450611ee683611e8a565b925060208a01995050600181019050611ec2565b50829750879550505050505092915050565b600060a0830160008301518482036000860152611f298282611e02565b91505060208301518482036020860152611f438282611e02565b9150506040830151611f586040860182611e3b565b506060830151611f6b6060860182611e3b565b5060808301518482036080860152611f838282611e97565b9150508091505092915050565b6000611f9c8383611f0c565b905092915050565b6000602082019050919050565b6000611fbc82611d90565b611fc68185611d9b565b935083602082028501611fd885611dac565b8060005b858110156120145784840389528151611ff58582611f90565b945061200083611fa4565b925060208a01995050600181019050611fdc565b50829750879550505050505092915050565b600060208201905081810360008301526120408184611fb1565b905092915050565b6000806040838503121561205f5761205e611b10565b5b600083013567ffffffffffffffff81111561207d5761207c611b15565b5b61208985828601611c32565b925050602083013567ffffffffffffffff8111156120aa576120a9611b15565b5b6120b685828601611c32565b9150509250929050565b600067ffffffffffffffff8211156120db576120da611b35565b5b602082029050602081019050919050565b600080fd5b60006121046120ff846120c0565b611b95565b90508083825260208201905060208402830185811115612127576121266120ec565b5b835b8181101561216e57803567ffffffffffffffff81111561214c5761214b611b1a565b5b8086016121598982611c32565b85526020850194505050602081019050612129565b5050509392505050565b600082601f83011261218d5761218c611b1a565b5b813561219d8482602086016120f1565b91505092915050565b6000806000606084860312156121bf576121be611b10565b5b600084013567ffffffffffffffff8111156121dd576121dc611b15565b5b6121e986828701611c32565b935050602084013567ffffffffffffffff81111561220a57612209611b15565b5b61221686828701611c32565b925050604084013567ffffffffffffffff81111561223757612236611b15565b5b61224386828701612178565b9150509250925092565b6000819050919050565b6122608161224d565b82525050565b600060208201905061227b6000830184612257565b92915050565b600081905092915050565b600061229782611dbc565b6122a18185612281565b93506122b1818560208601611dd8565b80840191505092915050565b60006122c9828461228c565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061231b57607f821691505b60208210810361232e5761232d6122d4565b5b50919050565b60008190508160005260206000209050919050565b6000815461235681612303565b6123608186612281565b9450600182166000811461237b5760018114612390576123c3565b60ff19831686528115158202860193506123c3565b61239985612334565b60005b838110156123bb5781548189015260018201915060208101905061239c565b838801955050505b50505092915050565b60006123d88284612349565b915081905092915050565b600082825260208201905092915050565b7f4f6e6c79206f776e65722063616e2061646420616c6c6f776564000000000000600082015250565b600061242a601a836123e3565b9150612435826123f4565b602082019050919050565b600060208201905081810360008301526124598161241d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061249a8261224d565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036124cc576124cb612460565b5b600182019050919050565b7f4f6e6c79206f776e65722063616e2064656c6574652073616665000000000000600082015250565b600061250d601a836123e3565b9150612518826124d7565b602082019050919050565b6000602082019050818103600083015261253c81612500565b9050919050565b600061254e8261224d565b91506000820361256157612560612460565b5b600182039050919050565b7f4f6e6c79206f776e65722063616e2072656d6f766520616c6c6f776564000000600082015250565b60006125a2601d836123e3565b91506125ad8261256c565b602082019050919050565b600060208201905081810360008301526125d181612595565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4f6e6c79206f776e65722063616e2064656c6574652066696c65000000000000600082015250565b600061263d601a836123e3565b915061264882612607565b602082019050919050565b6000602082019050818103600083015261266c81612630565b9050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026126c07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612683565b6126ca8683612683565b95508019841693508086168417925050509392505050565b6000819050919050565b60006127076127026126fd8461224d565b6126e2565b61224d565b9050919050565b6000819050919050565b612721836126ec565b61273561272d8261270e565b848454612690565b825550505050565b600090565b61274a61273d565b612755818484612718565b505050565b5b818110156127795761276e600082612742565b60018101905061275b565b5050565b601f8211156127be5761278f81612334565b61279884612673565b810160208510156127a7578190505b6127bb6127b385612673565b83018261275a565b50505b505050565b600082821c905092915050565b60006127e1600019846008026127c3565b1980831691505092915050565b60006127fa83836127d0565b9150826002028217905092915050565b61281382611dbc565b67ffffffffffffffff81111561282c5761282b611b35565b5b6128368254612303565b61284182828561277d565b600060209050601f8311600181146128745760008415612862578287015190505b61286c85826127ee565b8655506128d4565b601f19841661288286612334565b60005b828110156128aa57848901518255600182019150602085019450602081019050612885565b868310156128c757848901516128c3601f8916826127d0565b8355505b6001600288020188555050505b50505050505056fea2646970667358221220486da1044e695e5b3b311d7b6714e38c43ca15bac9332ac46818137ed5241af964736f6c63430008120033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061009e5760003560e01c80637df73472116100665780637df7347214610143578063be6916941461015f578063e4bcd9021461017d578063ed1f9ca614610199578063ee598f33146101c95761009e565b806308578a63146100a35780631789ac2b146100bf578063317960c4146100db578063383efbd5146100f75780636ef6682714610127575b600080fd5b6100bd60048036038101906100b89190611cbe565b6101f9565b005b6100d960048036038101906100d49190611d1a565b610380565b005b6100f560048036038101906100f09190611cbe565b610563565b005b610111600480360381019061010c9190611d63565b6106ff565b60405161011e9190612026565b60405180910390f35b610141600480360381019061013c9190612048565b610b78565b005b61015d600480360381019061015891906121a6565b610daa565b005b610167610f09565b6040516101749190612266565b60405180910390f35b61019760048036038101906101929190611cbe565b610f0f565b005b6101b360048036038101906101ae9190611d63565b6110aa565b6040516101c09190612026565b60405180910390f35b6101e360048036038101906101de9190611d63565b61152d565b6040516101f09190612026565b60405180910390f35b6000600190505b600254811161037b578260405160200161021a91906122bd565b6040516020818303038152906040528051906020012060008083815260200190815260200160002060000160405160200161025591906123cc565b60405160208183030381529060405280519060200120036103685760008082815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610313576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030a90612440565b60405180910390fd5b8160008083815260200190815260200160002060030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b80806103739061248f565b915050610200565b505050565b6000600190505b600254811161055e57816040516020016103a191906122bd565b604051602081830303815290604052805190602001206000808381526020019081526020016000206000016040516020016103dc91906123cc565b604051602081830303815290604052805190602001200361054b5760008082815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461049a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049190612523565b60405180910390fd5b600080828152602001908152602001600020600080820160006104bd91906119b0565b6001820160006104cd91906119b0565b6002820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556003820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560048201600061052b91906119f0565b50506002600081548092919061054090612543565b919050555050610560565b80806105569061248f565b915050610387565b505b50565b6000600190505b60025481116106fa578260405160200161058491906122bd565b604051602081830303815290604052805190602001206000808381526020019081526020016000206000016040516020016105bf91906123cc565b60405160208183030381529060405280519060200120036106e75760008082815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461067d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610674906125b8565b60405180910390fd5b60006001600083815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b80806106f29061248f565b91505061056a565b505050565b6060600080600190505b6002548111610797576001600082815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156107845781806107809061248f565b9250505b808061078f9061248f565b915050610709565b5060008167ffffffffffffffff8111156107b4576107b3611b35565b5b6040519080825280602002602001820160405280156107ed57816020015b6107da611a11565b8152602001906001900390816107d25790505b509050600091506000600190505b6002548111610b6d576001600082815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610b5a576000808281526020019081526020016000206040518060a001604052908160008201805461089490612303565b80601f01602080910402602001604051908101604052809291908181526020018280546108c090612303565b801561090d5780601f106108e25761010080835404028352916020019161090d565b820191906000526020600020905b8154815290600101906020018083116108f057829003601f168201915b5050505050815260200160018201805461092690612303565b80601f016020809104026020016040519081016040528092919081815260200182805461095290612303565b801561099f5780601f106109745761010080835404028352916020019161099f565b820191906000526020600020905b81548152906001019060200180831161098257829003601f168201915b505050505081526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160048201805480602002602001604051908101604052809291908181526020016000905b82821015610b25578382906000526020600020018054610a9890612303565b80601f0160208091040260200160405190810160405280929190818152602001828054610ac490612303565b8015610b115780601f10610ae657610100808354040283529160200191610b11565b820191906000526020600020905b815481529060010190602001808311610af457829003601f168201915b505050505081526020019060010190610a79565b5050505081525050828481518110610b4057610b3f6125d8565b5b60200260200101819052508280610b569061248f565b9350505b8080610b659061248f565b9150506107fb565b508092505050919050565b6000600190505b6002548111610da45782604051602001610b9991906122bd565b60405160208183030381529060405280519060200120600080838152602001908152602001600020600001604051602001610bd491906123cc565b6040516020818303038152906040528051906020012003610d915760008082815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610c92576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c8990612653565b60405180910390fd5b60005b60008083815260200190815260200160002060040180549050811015610d8f5782604051602001610cc691906122bd565b604051602081830303815290604052805190602001206000808481526020019081526020016000206004018281548110610d0357610d026125d8565b5b90600052602060002001604051602001610d1d91906123cc565b6040516020818303038152906040528051906020012003610d7c576000808381526020019081526020016000206004018181548110610d5f57610d5e6125d8565b5b906000526020600020016000610d7591906119b0565b5050610da6565b8080610d879061248f565b915050610c95565b505b8080610d9c9061248f565b915050610b7f565b505b5050565b60026000815480929190610dbd9061248f565b91905055506040518060a001604052808481526020018381526020013373ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020018281525060008060025481526020019081526020016000206000820151816000019081610e3f919061280a565b506020820151816001019081610e55919061280a565b5060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506080820151816004019080519060200190610f00929190611a6c565b50905050505050565b60025481565b6000600190505b60025481116110a55782604051602001610f3091906122bd565b60405160208183030381529060405280519060200120600080838152602001908152602001600020600001604051602001610f6b91906123cc565b60405160208183030381529060405280519060200120036110925760008082815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611029576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161102090612440565b60405180910390fd5b600180600083815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b808061109d9061248f565b915050610f16565b505050565b6060600080600190505b6002548111611147578373ffffffffffffffffffffffffffffffffffffffff1660008083815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036111345781806111309061248f565b9250505b808061113f9061248f565b9150506110b4565b5060008167ffffffffffffffff81111561116457611163611b35565b5b60405190808252806020026020018201604052801561119d57816020015b61118a611a11565b8152602001906001900390816111825790505b509050600091506000600190505b6002548111611522578473ffffffffffffffffffffffffffffffffffffffff1660008083815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361150f576000808281526020019081526020016000206040518060a001604052908160008201805461124990612303565b80601f016020809104026020016040519081016040528092919081815260200182805461127590612303565b80156112c25780601f10611297576101008083540402835291602001916112c2565b820191906000526020600020905b8154815290600101906020018083116112a557829003601f168201915b505050505081526020016001820180546112db90612303565b80601f016020809104026020016040519081016040528092919081815260200182805461130790612303565b80156113545780601f1061132957610100808354040283529160200191611354565b820191906000526020600020905b81548152906001019060200180831161133757829003601f168201915b505050505081526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160048201805480602002602001604051908101604052809291908181526020016000905b828210156114da57838290600052602060002001805461144d90612303565b80601f016020809104026020016040519081016040528092919081815260200182805461147990612303565b80156114c65780601f1061149b576101008083540402835291602001916114c6565b820191906000526020600020905b8154815290600101906020018083116114a957829003601f168201915b50505050508152602001906001019061142e565b50505050815250508284815181106114f5576114f46125d8565b5b6020026020010181905250828061150b9061248f565b9350505b808061151a9061248f565b9150506111ab565b508092505050919050565b6060600080600190505b60025481116115ca578373ffffffffffffffffffffffffffffffffffffffff1660008083815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036115b75781806115b39061248f565b9250505b80806115c29061248f565b915050611537565b5060008167ffffffffffffffff8111156115e7576115e6611b35565b5b60405190808252806020026020018201604052801561162057816020015b61160d611a11565b8152602001906001900390816116055790505b509050600091506000600190505b60025481116119a5578473ffffffffffffffffffffffffffffffffffffffff1660008083815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603611992576000808281526020019081526020016000206040518060a00160405290816000820180546116cc90612303565b80601f01602080910402602001604051908101604052809291908181526020018280546116f890612303565b80156117455780601f1061171a57610100808354040283529160200191611745565b820191906000526020600020905b81548152906001019060200180831161172857829003601f168201915b5050505050815260200160018201805461175e90612303565b80601f016020809104026020016040519081016040528092919081815260200182805461178a90612303565b80156117d75780601f106117ac576101008083540402835291602001916117d7565b820191906000526020600020905b8154815290600101906020018083116117ba57829003601f168201915b505050505081526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160048201805480602002602001604051908101604052809291908181526020016000905b8282101561195d5783829060005260206000200180546118d090612303565b80601f01602080910402602001604051908101604052809291908181526020018280546118fc90612303565b80156119495780601f1061191e57610100808354040283529160200191611949565b820191906000526020600020905b81548152906001019060200180831161192c57829003601f168201915b5050505050815260200190600101906118b1565b5050505081525050828481518110611978576119776125d8565b5b6020026020010181905250828061198e9061248f565b9350505b808061199d9061248f565b91505061162e565b508092505050919050565b5080546119bc90612303565b6000825580601f106119ce57506119ed565b601f0160209004906000526020600020908101906119ec9190611ac5565b5b50565b5080546000825590600052602060002090810190611a0e9190611ae2565b50565b6040518060a001604052806060815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001606081525090565b828054828255906000526020600020908101928215611ab4579160200282015b82811115611ab3578251829081611aa3919061280a565b5091602001919060010190611a8c565b5b509050611ac19190611ae2565b5090565b5b80821115611ade576000816000905550600101611ac6565b5090565b5b80821115611b025760008181611af991906119b0565b50600101611ae3565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611b6d82611b24565b810181811067ffffffffffffffff82111715611b8c57611b8b611b35565b5b80604052505050565b6000611b9f611b06565b9050611bab8282611b64565b919050565b600067ffffffffffffffff821115611bcb57611bca611b35565b5b611bd482611b24565b9050602081019050919050565b82818337600083830152505050565b6000611c03611bfe84611bb0565b611b95565b905082815260208101848484011115611c1f57611c1e611b1f565b5b611c2a848285611be1565b509392505050565b600082601f830112611c4757611c46611b1a565b5b8135611c57848260208601611bf0565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611c8b82611c60565b9050919050565b611c9b81611c80565b8114611ca657600080fd5b50565b600081359050611cb881611c92565b92915050565b60008060408385031215611cd557611cd4611b10565b5b600083013567ffffffffffffffff811115611cf357611cf2611b15565b5b611cff85828601611c32565b9250506020611d1085828601611ca9565b9150509250929050565b600060208284031215611d3057611d2f611b10565b5b600082013567ffffffffffffffff811115611d4e57611d4d611b15565b5b611d5a84828501611c32565b91505092915050565b600060208284031215611d7957611d78611b10565b5b6000611d8784828501611ca9565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611df6578082015181840152602081019050611ddb565b60008484015250505050565b6000611e0d82611dbc565b611e178185611dc7565b9350611e27818560208601611dd8565b611e3081611b24565b840191505092915050565b611e4481611c80565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000611e828383611e02565b905092915050565b6000602082019050919050565b6000611ea282611e4a565b611eac8185611e55565b935083602082028501611ebe85611e66565b8060005b85811015611efa5784840389528151611edb8582611e76565b9450611ee683611e8a565b925060208a01995050600181019050611ec2565b50829750879550505050505092915050565b600060a0830160008301518482036000860152611f298282611e02565b91505060208301518482036020860152611f438282611e02565b9150506040830151611f586040860182611e3b565b506060830151611f6b6060860182611e3b565b5060808301518482036080860152611f838282611e97565b9150508091505092915050565b6000611f9c8383611f0c565b905092915050565b6000602082019050919050565b6000611fbc82611d90565b611fc68185611d9b565b935083602082028501611fd885611dac565b8060005b858110156120145784840389528151611ff58582611f90565b945061200083611fa4565b925060208a01995050600181019050611fdc565b50829750879550505050505092915050565b600060208201905081810360008301526120408184611fb1565b905092915050565b6000806040838503121561205f5761205e611b10565b5b600083013567ffffffffffffffff81111561207d5761207c611b15565b5b61208985828601611c32565b925050602083013567ffffffffffffffff8111156120aa576120a9611b15565b5b6120b685828601611c32565b9150509250929050565b600067ffffffffffffffff8211156120db576120da611b35565b5b602082029050602081019050919050565b600080fd5b60006121046120ff846120c0565b611b95565b90508083825260208201905060208402830185811115612127576121266120ec565b5b835b8181101561216e57803567ffffffffffffffff81111561214c5761214b611b1a565b5b8086016121598982611c32565b85526020850194505050602081019050612129565b5050509392505050565b600082601f83011261218d5761218c611b1a565b5b813561219d8482602086016120f1565b91505092915050565b6000806000606084860312156121bf576121be611b10565b5b600084013567ffffffffffffffff8111156121dd576121dc611b15565b5b6121e986828701611c32565b935050602084013567ffffffffffffffff81111561220a57612209611b15565b5b61221686828701611c32565b925050604084013567ffffffffffffffff81111561223757612236611b15565b5b61224386828701612178565b9150509250925092565b6000819050919050565b6122608161224d565b82525050565b600060208201905061227b6000830184612257565b92915050565b600081905092915050565b600061229782611dbc565b6122a18185612281565b93506122b1818560208601611dd8565b80840191505092915050565b60006122c9828461228c565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061231b57607f821691505b60208210810361232e5761232d6122d4565b5b50919050565b60008190508160005260206000209050919050565b6000815461235681612303565b6123608186612281565b9450600182166000811461237b5760018114612390576123c3565b60ff19831686528115158202860193506123c3565b61239985612334565b60005b838110156123bb5781548189015260018201915060208101905061239c565b838801955050505b50505092915050565b60006123d88284612349565b915081905092915050565b600082825260208201905092915050565b7f4f6e6c79206f776e65722063616e2061646420616c6c6f776564000000000000600082015250565b600061242a601a836123e3565b9150612435826123f4565b602082019050919050565b600060208201905081810360008301526124598161241d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061249a8261224d565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036124cc576124cb612460565b5b600182019050919050565b7f4f6e6c79206f776e65722063616e2064656c6574652073616665000000000000600082015250565b600061250d601a836123e3565b9150612518826124d7565b602082019050919050565b6000602082019050818103600083015261253c81612500565b9050919050565b600061254e8261224d565b91506000820361256157612560612460565b5b600182039050919050565b7f4f6e6c79206f776e65722063616e2072656d6f766520616c6c6f776564000000600082015250565b60006125a2601d836123e3565b91506125ad8261256c565b602082019050919050565b600060208201905081810360008301526125d181612595565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4f6e6c79206f776e65722063616e2064656c6574652066696c65000000000000600082015250565b600061263d601a836123e3565b915061264882612607565b602082019050919050565b6000602082019050818103600083015261266c81612630565b9050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026126c07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612683565b6126ca8683612683565b95508019841693508086168417925050509392505050565b6000819050919050565b60006127076127026126fd8461224d565b6126e2565b61224d565b9050919050565b6000819050919050565b612721836126ec565b61273561272d8261270e565b848454612690565b825550505050565b600090565b61274a61273d565b612755818484612718565b505050565b5b818110156127795761276e600082612742565b60018101905061275b565b5050565b601f8211156127be5761278f81612334565b61279884612673565b810160208510156127a7578190505b6127bb6127b385612673565b83018261275a565b50505b505050565b600082821c905092915050565b60006127e1600019846008026127c3565b1980831691505092915050565b60006127fa83836127d0565b9150826002028217905092915050565b61281382611dbc565b67ffffffffffffffff81111561282c5761282b611b35565b5b6128368254612303565b61284182828561277d565b600060209050601f8311600181146128745760008415612862578287015190505b61286c85826127ee565b8655506128d4565b601f19841661288286612334565b60005b828110156128aa57848901518255600182019150602085019450602081019050612885565b868310156128c757848901516128c3601f8916826127d0565b8355505b6001600288020188555050505b50505050505056fea2646970667358221220486da1044e695e5b3b311d7b6714e38c43ca15bac9332ac46818137ed5241af964736f6c63430008120033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 2799,
        "contract": "contracts/FileManager.sol:FileManager",
        "label": "safes",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_uint256,t_struct(Safe)2794_storage)"
      },
      {
        "astId": 2805,
        "contract": "contracts/FileManager.sol:FileManager",
        "label": "allowed",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))"
      },
      {
        "astId": 2807,
        "contract": "contracts/FileManager.sol:FileManager",
        "label": "safeCount",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_string_storage)dyn_storage": {
        "base": "t_string_storage",
        "encoding": "dynamic_array",
        "label": "string[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(address => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_bool)"
      },
      "t_mapping(t_uint256,t_struct(Safe)2794_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct FileManager.Safe)",
        "numberOfBytes": "32",
        "value": "t_struct(Safe)2794_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Safe)2794_storage": {
        "encoding": "inplace",
        "label": "struct FileManager.Safe",
        "members": [
          {
            "astId": 2784,
            "contract": "contracts/FileManager.sol:FileManager",
            "label": "name",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 2786,
            "contract": "contracts/FileManager.sol:FileManager",
            "label": "cid",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 2788,
            "contract": "contracts/FileManager.sol:FileManager",
            "label": "owner",
            "offset": 0,
            "slot": "2",
            "type": "t_address"
          },
          {
            "astId": 2790,
            "contract": "contracts/FileManager.sol:FileManager",
            "label": "accessNFT",
            "offset": 0,
            "slot": "3",
            "type": "t_address"
          },
          {
            "astId": 2793,
            "contract": "contracts/FileManager.sol:FileManager",
            "label": "fileNames",
            "offset": 0,
            "slot": "4",
            "type": "t_array(t_string_storage)dyn_storage"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}